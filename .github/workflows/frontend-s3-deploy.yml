#fourth version
jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: Install Dependencies
        run: |
          npm ci

      - name: Build Docker Image
        run: |
          docker build -t awshotelfrontend .
          docker tag awshotelfrontend:latest softa67/awshotelfrontend:1.0

      - name: Push Docker Image to Docker Hub
        run: |
          docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
          docker push softa67/awshotelfrontend:1.0

      - name: EC2 SCP > Copy / to /aws-hotel-server/
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "*"
          target: "aws-hotel-server/"

      - name: EC2 SSH > Pull and Start Docker Container
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /aws-hotel-server
            docker pull softa67/awshotelfrontend:1.0
            docker run -d -p 80:3000 --name awshotelfrontend softa67/awshotelfrontend:1.0

# third version
# on:
#   push:
#     branches:
#       - master

# jobs:
#   test:
#     runs-on: ubuntu-latest

#     # The CYF hotel DB.
#     # Then go to github and create the secrets https://github.com/softacoder/AWS-cyf-hotel/settings/secrets/actions
#     # services:
#     #   postgres:
#     #     image: postgres:latest
#     #     env:
#     #       POSTGRES_USER: postgres
#     #       POSTGRES_PASSWORD: password
#     #       POSTGRES_DB: dbnamefullstackprojectassessment
#     #     ports:
#     #       - 5432:5432
#     #     options: >-
#     #       --health-cmd pg_isready
#     #       --health-interval 10s
#     #       --health-timeout 5s
#     #       --health-retries 5

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Setup NodeJS
#         uses: actions/setup-node@v3
#         with:
#           node-version: 18

#       - name: Install Dependencies
#         run: npm ci

#       - name: Run Tests
#         run: npm test

# second version
# on: [push]

#     branches:
#       - main

# jobs:
#   deploy:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Setup NodeJS
#         uses: actions/setup-node@v3
#         with:
#           node-version: 18

#       - name: Install Dependencies
#         run: npm ci

#       - name: Set up AWS CLI
#         run: |
#           echo "[default]
#           aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" > ~/.aws/credentials

#       - name: Install AWS CLI
#         run: |
#           curl "https://d1vvhvl2y92vvt.cloudfront.net/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
#           unzip awscliv2.zip
#           sudo ./aws/install
#           aws --version

#       - name: Deploy to S3
#         run: |
#           aws s3 sync ./build/ s3://your-s3-bucket-name/

# first version
# on: [push]

#     branches:
#       - main

# jobs:
#   deploy:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Set up AWS CLI
#         run: |
#           echo "[default]
#           aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" > ~/.aws/credentials

#       - name: Install AWS CLI
#         run: |
#           curl "https://d1vvhvl2y92vvt.cloudfront.net/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
#           unzip awscliv2.zip
#           sudo ./aws/install
#           aws --version

#       - name: Deploy to S3
#         run: |
#           aws s3 sync ./build/ s3://your-s3-bucket-name/
